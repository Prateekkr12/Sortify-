version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: sortify-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: sortify
    volumes:
      - mongodb_data:/data/db
    networks:
      - sortify-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - sortify-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MODEL_SERVICE_URL=http://model_service:8000
      - PORT=5000
      - MONGO_URI=mongodb+srv://sachin-iam:Sachin123@cluster0.eypacgq.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - GOOGLE_CLIENT_ID=948082154353-negb3bcn21s4p0qlqllt0mvbr5mvpfec.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - JWT_SECRET=sortify-jwt-secret-key-2024-development
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      mongodb:
        condition: service_healthy
      model_service:
        condition: service_healthy
    networks:
      - sortify-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  model_service:
    build:
      context: ./model_service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - sortify-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  sortify-network:
    driver: bridge

volumes:
  mongodb_data:
